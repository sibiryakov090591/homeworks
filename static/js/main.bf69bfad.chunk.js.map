{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","menu","menu_item","to","Error404","wrapper","status","descr","icon","Message","props","styles","message__wrapper","message__avatar_block","message__avatar_img","src","avatar","alt","message__window","message__name","name","message__text","message","message__time","time","messageData","HW1","styleAffairTitle","color","fontSize","styleAffairs","display","styleWrapper","justifyContent","alignItems","marginBottom","padding","backgroundColor","width","borderRadius","styleBtn","height","border","cursor","Affair","style","affair","priority","onClick","deleteAffairCallback","_id","SuperButton","red","restProps","finalClassName","default","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","i","filterAffairs","filterValue","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","input","total","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkboxes","check","id","checked","htmlFor","box","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bf69bfad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__wrapper\":\"Message_message__wrapper__3Ia8j\",\"message__avatar_block\":\"Message_message__avatar_block__36Skq\",\"message__avatar_img\":\"Message_message__avatar_img__VHdjl\",\"message__window\":\"Message_message__window__1DdvA\",\"message__name\":\"Message_message__name__1dW6T\",\"message__text\":\"Message_message__text__3i73J\",\"message__time\":\"Message_message__time__HstkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Header_menu__1anPn\",\"glowing\":\"Header_glowing__2mcr-\",\"menu_item\":\"Header_menu_item__1n4hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2-PJa\",\"status\":\"Error404_status__3WlkH\",\"descr\":\"Error404_descr__1pS1L\",\"icon\":\"Error404_icon__2dG8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__3aEqy\",\"input\":\"Greeting_input__1cxjt\",\"errorInput\":\"Greeting_errorInput__2UH-L\",\"btn\":\"Greeting_btn__1pkxm\",\"errorMessage\":\"Greeting_errorMessage__1uV38\",\"total\":\"Greeting_total__rYgze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SuperInputText_wrapper__1l5bk\",\"superInput\":\"SuperInputText_superInput__2tVMz\",\"errorInput\":\"SuperInputText_errorInput__PGctP\",\"error\":\"SuperInputText_error__36bPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"SuperCheckbox_spanClassName__3VCKE\",\"checkboxes\":\"SuperCheckbox_checkboxes__3b2X7\",\"check\":\"SuperCheckbox_check__3A_zP\",\"box\":\"SuperCheckbox_box__1JQ7t\",\"animOnTransform\":\"SuperCheckbox_animOnTransform__qMOH1\",\"animOn\":\"SuperCheckbox_animOn__1WwqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__lcuBe\",\"glowing\":\"SuperButton_glowing__1HA1l\",\"red\":\"SuperButton_red__31wmb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2wOKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2NLqA\",\"column\":\"HW4_column__129dp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editMode\":\"SuperEditableSpan_editMode__2VtfS\"};","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <nav className={s.menu}>\r\n            <ul>\r\n                <NavLink className={s.menu_item} to={\"/pre-junior\"}>\r\n                    <li>Pre-Junior</li>\r\n                </NavLink>\r\n                <NavLink className={s.menu_item} to={\"/junior\"}>\r\n                    <li>Junior</li>\r\n                </NavLink>\r\n                <NavLink className={s.menu_item} to={\"/junior-plus\"}>\r\n                    <li>Junior-Plus</li>\r\n                </NavLink>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from \"./Error404.module.css\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.status}>404</div>\r\n            <div className={s.descr}>Page not found!</div>\r\n            <div className={s.icon}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from \"react\";\r\nimport styles from \"./Message.module.css\";\r\n\r\ntype messageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: messageDataType) {\r\n    return (\r\n        <div className={styles.message__wrapper}>\r\n            <div className={styles.message__avatar_block}>\r\n                <img className={styles.message__avatar_img} src={props.avatar} alt=\"your-avatar\"/>\r\n            </div>\r\n            <div className={styles.message__window}>\r\n                <div className={styles.message__name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={styles.message__text}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={styles.message__time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Laura\",\r\n    message: \"Hello!!!\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {defaultAffairsType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: defaultAffairsType // need to fix any (DONE!)\r\n    deleteAffairCallback: (_id: number) => void // need to fix any (DONE!)\r\n}\r\n\r\n// Styles\r\nconst styleAffairTitle = {\r\n    color: \"#e7025e\",\r\n    fontSize: \"20px\"\r\n}\r\nconst styleAffairs = {\r\n    display: \"inline-block\"\r\n}\r\nconst styleWrapper = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: \"20px\",\r\n    padding: \"5px 20px\",\r\n    backgroundColor: \"#cdcdcd\",\r\n    width: \"250px\",\r\n    borderRadius: \"10px\"\r\n}\r\nconst styleBtn = {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    display: \"inline-block\",\r\n    backgroundColor: \"#fda2cb\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    color: \"#343434\"\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    };// need to fix (DONE!)\r\n\r\n    return (\r\n        <div style={styleWrapper}>\r\n            <div style={styleAffairs}>\r\n                <div>\r\n                    <span style={styleAffairTitle}>Name:</span> {props.affair.name}\r\n                </div>\r\n                <div>\r\n                    <span style={styleAffairTitle}>Priority:</span> {props.affair.priority}\r\n                </div>\r\n            </div>\r\n            <button style={styleBtn} onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.default} ${red && s.red} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, defaultAffairsType, FilterType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any (DONE!)\r\n    data: Array<defaultAffairsType>\r\n    setFilter: (filterValue: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nconst styleBtnFilter = {\r\n    marginRight: \"10px\",\r\n    height: \"30px\",\r\n    width: \"80px\",\r\n    display: \"inline-block\",\r\n    backgroundColor: \"#fda2cb\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    color: \"#343434\"\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")}; // need to fix (DONE!)\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton onClick={setAll}>All</SuperButton>\r\n            <SuperButton onClick={setHigh}>High</SuperButton>\r\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type defaultAffairsType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any (DONE!)\r\nexport type AffairType = any; // need to fix any\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<defaultAffairsType> = [ // need to fix any (DONE!)\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<defaultAffairsType>, filter: FilterType): Array<defaultAffairsType> => { // need to fix any (DONE!)\r\n    if (filter === \"high\") return affairs.filter(i => i.priority === \"high\")\r\n    else if (filter === \"middle\") return affairs.filter(i => i.priority === \"middle\")\r\n    else if (filter === \"low\") return affairs.filter(i => i.priority === \"low\")\r\n    else return affairs; // need to fix (DONE!)\r\n}\r\nexport const deleteAffair = (affairs: Array<defaultAffairsType>, _id: number): Array<defaultAffairsType> => { // need to fix any (DONE!)\r\n    return affairs.filter(i => i._id !== _id); // need to fix (DONE!)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<defaultAffairsType>>(defaultAffairs); // need to fix any (DONE!)\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any (DONE!)\r\n    const changeFilter = (filterValue: FilterType) => setFilter(filterValue);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать) (DONE!)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={changeFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ? `${s.errorInput} ${className}` : `${s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any (DONE!)\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any (DONE!)\r\n    addUser: () => void // need to fix any (DONE!)\r\n    error: string // need to fix any (DONE!)\r\n    totalUsers: number // need to fix any (DONE!)\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.errorInput : s.input; // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <SuperInputText  value={name}\r\n                             onChange={setNameCallback}\r\n                             className={inputClass}\r\n                             error={error}\r\n            />\r\n            <SuperButton onClick={addUser}>\r\n                Add\r\n            </SuperButton>\r\n            <span className={s.total}>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any (DONE!)\r\n    addUserCallback: (name: string) => void // need to fix any (DONE!)\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\"); // need to fix any (DONE!)\r\n    const [error, setError] = useState<string>(\"\"); // need to fix any (DONE!)\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any (DONE!)\r\n        setError(\"\");\r\n        setName(e.currentTarget.value); // need to fix (DONE!)\r\n    };\r\n\r\n    const addUser = () => {\r\n        if (!name) return setError(\"*What is your name, my dear friend? :)\");\r\n        setError(\"\");\r\n        addUserCallback(name);\r\n        setName(\"\");\r\n        alert(`Hello  ${name}!`); // need to fix (DONE!)\r\n    };\r\n\r\n    let totalUsers = users.length; // need to fix (DONE!)\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n// @ts-ignore\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any (DONE!)\r\n    name: string // need to fix any (DONE!)\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any (DONE!)\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any (DONE!)\r\n        setUsers([{\r\n            _id: v1(),\r\n            name: name\r\n        }, ...users]); // need to fix (DONE!)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(!restProps.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <div className={s.checkboxes}>\r\n            <div className={s.check}>\r\n                <input id=\"check\"\r\n                       type=\"checkbox\"\r\n                       onChange={onChangeCallback}\r\n                       {...restProps}/>\r\n                <label htmlFor=\"check\">\r\n                    <div className={s.box}><i>✓</i></div>\r\n                    {children && <span className={s.spanClassName}>{children}</span>}\r\n                </label>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"Введите текст\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./SuperEditableSpan.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${s.editMode} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        const state = restoreState<string>(\"editable-span-value\", value);\r\n        setValue(state);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/junior\",\r\n    JUNIOR_PLUS: \"/junior-plus\"\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                {/*add routes*/}\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n\r\n            <HashRouter>\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}